# Generated by Django 5.1.4 on 2025-02-20 00:52

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0122_charfield_null_choices'),
        ('netbox_servicemgmt', '0012_solutionbase_redesign'),
        ('tenancy', '0017_natural_ordering'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='component',
            name='solutionbase_ptr',
        ),
        migrations.RemoveField(
            model_name='deployment',
            name='solutionbase_ptr',
        ),
        migrations.RemoveField(
            model_name='solution',
            name='solutionbase_ptr',
        ),
        migrations.AddField(
            model_name='component',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='component',
            name='custom_field_data',
            field=models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder),
        ),
        migrations.AddField(
            model_name='component',
            name='description',
            field=models.TextField(default='na'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='id',
            field=models.BigAutoField(auto_created=True, default=1, primary_key=True, serialize=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='last_updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='component',
            name='name',
            field=models.CharField(default='na', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='status',
            field=models.CharField(default='inactive', max_length=20),
        ),
        migrations.AddField(
            model_name='component',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='component',
            name='version',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='deployment',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='deployment',
            name='custom_field_data',
            field=models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder),
        ),
        migrations.AddField(
            model_name='deployment',
            name='description',
            field=models.TextField(default='na'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='deployment',
            name='id',
            field=models.BigAutoField(auto_created=True, default=1, primary_key=True, serialize=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='deployment',
            name='last_updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='deployment',
            name='name',
            field=models.CharField(default='na', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='deployment',
            name='status',
            field=models.CharField(default='inactive', max_length=20),
        ),
        migrations.AddField(
            model_name='deployment',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='deployment',
            name='version',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='app_technical_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_app_technical_contact', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solution',
            name='app_technical_contact_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_app_technical_contact', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='solution',
            name='architect',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_design_contact', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solution',
            name='business_owner_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_business_owner', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solution',
            name='business_owner_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_business_owner', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='solution',
            name='compliance_requirements',
            field=models.CharField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='custom_field_data',
            field=models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder),
        ),
        migrations.AddField(
            model_name='solution',
            name='data_classification',
            field=models.CharField(null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='description',
            field=models.TextField(default='na'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='solution',
            name='fault_tolerence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solutions', to='netbox_servicemgmt.faulttolerence'),
        ),
        migrations.AddField(
            model_name='solution',
            name='id',
            field=models.BigAutoField(auto_created=True, default=1, primary_key=True, serialize=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='solution',
            name='incident_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incident_contact', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solution',
            name='last_bcdr_test',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='last_review',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='last_risk_assessment',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='last_updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='name',
            field=models.CharField(default='na', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='solution',
            name='os_technical_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_os_technical_contact', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solution',
            name='os_technical_contact_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_os_technical_contact', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='solution',
            name='production_readiness_status',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='project_id',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='requester',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_requester', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solution',
            name='slos',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solutions', to='netbox_servicemgmt.slo'),
        ),
        migrations.AddField(
            model_name='solution',
            name='solution_number',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='solution_type',
            field=models.CharField(max_length=55, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='status',
            field=models.CharField(default='inactive', max_length=20),
        ),
        migrations.AddField(
            model_name='solution',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='solution',
            name='vendor_management_status',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='version',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.DeleteModel(
            name='SolutionBase',
        ),
    ]