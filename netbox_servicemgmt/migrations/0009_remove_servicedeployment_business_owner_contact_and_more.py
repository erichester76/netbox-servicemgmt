# Generated by Django 5.0.9 on 2024-11-17 20:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('dcim', '0191_module_bay_rebuild'),
        ('netbox_servicemgmt', '0008_sla_uuid_sla_virtual_machines'),
        ('tenancy', '0015_contactassignment_rename_content_type'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='servicedeployment',
            name='business_owner_contact',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='business_owner_tenant',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='functional_area_sponsor_tenant',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='functional_sub_area_sponsor_tenant',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='service_owner_contact',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='service_owner_tenant',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='airgap_backup',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='backup_schedule',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='clustered',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='instances_per_site',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='multi_region',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='multi_site',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='offsite_backup',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='offsite_replication',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='primary_site',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement10_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement10_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement11_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement11_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement12_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement12_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement13_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement13_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement14_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement14_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement15_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement15_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement16_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement16_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement17_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement17_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement18_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement18_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement19_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement19_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement1_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement1_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement20_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement20_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement2_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement2_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement3_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement3_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement4_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement4_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement5_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement5_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement6_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement6_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement7_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement7_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement8_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement8_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement9_field',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement9_value',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='secondary_site',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='snapshots',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='tertiary_site',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='vip_required',
        ),
        migrations.RemoveField(
            model_name='servicetemplate',
            name='vendor_management_assessment',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='business_owner_contact',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='business_owner_tenant',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='requirements',
        ),
        migrations.AddField(
            model_name='servicerequirement',
            name='fault_tolerence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sr_ft', to='netbox_servicemgmt.faulttolerance'),
        ),
        migrations.AddField(
            model_name='servicetemplate',
            name='vendor_management_number',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='servicetemplate',
            name='vendor_management_status',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='airgap_backup',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='clustered',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='data_classification',
            field=models.CharField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='functional_area_sponsor_tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sor_fa_owners', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='functional_sub_area_sponsor_tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sor_sfa_owners', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='multi_region',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='multi_site',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='offsite_backup',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='offsite_replication',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='rfp_ref',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='rfp_status',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='service_owner_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sor_service_owners', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='service_owner_tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sor_service_owners', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='solutionrequest',
            name='slo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sor_slo', to='netbox_servicemgmt.slo'),
        ),
        migrations.AddField(
            model_name='solutiontemplate',
            name='data_classification',
            field=models.CharField(null=True),
        ),
        migrations.AddField(
            model_name='solutiontemplate',
            name='fault_tolerence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sot_slo', to='netbox_servicemgmt.faulttolerance'),
        ),
        migrations.AddField(
            model_name='solutiontemplate',
            name='sla_number',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='solutiontemplate',
            name='slo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sot_slo', to='netbox_servicemgmt.slo'),
        ),
        migrations.AddField(
            model_name='solutiontemplate',
            name='vendors',
            field=models.ManyToManyField(blank=True, null=True, related_name='sot_vendors', to='dcim.manufacturer'),
        ),
        migrations.AlterField(
            model_name='faulttolerance',
            name='primary_site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ft_primary_sites', to='dcim.site'),
        ),
        migrations.AlterField(
            model_name='faulttolerance',
            name='secondary_site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ft_secondary_sites', to='dcim.site'),
        ),
        migrations.AlterField(
            model_name='faulttolerance',
            name='tertiary_site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ft_tertiary_sites', to='dcim.site'),
        ),
        migrations.AlterField(
            model_name='servicecomponent',
            name='object_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype'),
        ),
        migrations.AlterField(
            model_name='servicecomponent',
            name='service_deployment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sc_deployments', to='netbox_servicemgmt.servicedeployment'),
        ),
        migrations.AlterField(
            model_name='servicecomponent',
            name='service_requirement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sc_components', to='netbox_servicemgmt.servicerequirement'),
        ),
        migrations.AlterField(
            model_name='servicedeployment',
            name='service_template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_deployments', to='netbox_servicemgmt.servicetemplate'),
        ),
        migrations.AlterField(
            model_name='servicerequirement',
            name='object_type',
            field=models.ForeignKey(limit_choices_to={'model__in': ['device', 'virtualmachine', 'softwareproduct', 'ipaddress', 'hostname', 'certificate', 'lbvirtualserver', 'container']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype'),
        ),
        migrations.AlterField(
            model_name='servicerequirement',
            name='service_slo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sr_slo', to='netbox_servicemgmt.slo'),
        ),
        migrations.AlterField(
            model_name='servicerequirement',
            name='service_template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_requirements', to='netbox_servicemgmt.servicetemplate'),
        ),
        migrations.AlterField(
            model_name='servicetemplate',
            name='fault_tolerence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='st_ft', to='netbox_servicemgmt.faulttolerance'),
        ),
        migrations.AlterField(
            model_name='servicetemplate',
            name='service_slo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='st_slo', to='netbox_servicemgmt.slo'),
        ),
        migrations.AlterField(
            model_name='servicetemplate',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='st_vendor', to='dcim.manufacturer'),
        ),
        migrations.AlterField(
            model_name='sla',
            name='business_owner_tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sla_business_owners', to='tenancy.tenant'),
        ),
        migrations.AlterField(
            model_name='sla',
            name='slo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sla_slo', to='netbox_servicemgmt.slo'),
        ),
        migrations.AlterField(
            model_name='solutionrequest',
            name='business_owner_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sor_business_owners', to='tenancy.contact'),
        ),
        migrations.AlterField(
            model_name='solutionrequest',
            name='business_owner_tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sor_business_owners', to='tenancy.tenant'),
        ),
        migrations.AlterField(
            model_name='solutionrequest',
            name='design_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sor_designers', to='tenancy.contact'),
        ),
        migrations.AlterField(
            model_name='solutionrequest',
            name='requirements',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='solutionrequest',
            name='solution_type',
            field=models.CharField(max_length=55, null=True),
        ),
        migrations.AlterField(
            model_name='solutiontemplate',
            name='design_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sot_designers', to='tenancy.contact'),
        ),
        migrations.AlterField(
            model_name='solutiontemplate',
            name='solution_request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sot_sr', to='netbox_servicemgmt.solutionrequest'),
        ),
        migrations.AlterField(
            model_name='solutiontemplate',
            name='solution_type',
            field=models.CharField(max_length=55, null=True),
        ),
    ]