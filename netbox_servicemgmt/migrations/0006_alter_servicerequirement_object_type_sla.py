# Generated by Django 5.0.9 on 2024-10-31 18:22

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('extras', '0121_customfield_related_object_filter'),
        ('netbox_servicemgmt', '0005_remove_servicedeployment_solution_deployment_and_more'),
        ('tenancy', '0015_contactassignment_rename_content_type'),
    ]

    operations = [
        migrations.AlterField(
            model_name='servicerequirement',
            name='object_type',
            field=models.ForeignKey(limit_choices_to={'model__in': ['device', 'virtualmachine', 'softwareproduct', 'ipaddress', 'hostname', 'certificate', 'lbvirtualserver', 'container']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.CreateModel(
            name='SLA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('data_classification', models.CharField(default='public', max_length=20)),
                ('business_owner_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sla_business_owners', to='tenancy.contact')),
                ('business_owner_tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sla_business_owners', to='tenancy.tenant')),
                ('slo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sla_slo', to='netbox_servicemgmt.slo')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('technical_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sla_technical_contacts', to='tenancy.contact')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]