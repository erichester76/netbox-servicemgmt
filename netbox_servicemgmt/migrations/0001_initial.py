# Generated by Django 5.0.9 on 2024-10-19 19:47

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('dcim', '0191_module_bay_rebuild'),
        ('extras', '0121_customfield_related_object_filter'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('tenancy', '0015_contactassignment_rename_content_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='FaultTolerance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('vip_required', models.BooleanField(default=False)),
                ('instances_per_site', models.IntegerField()),
                ('offsite_replication', models.BooleanField(default=False)),
                ('clustered', models.BooleanField(default=False)),
                ('multi_site', models.BooleanField(default=False)),
                ('multi_region', models.BooleanField(default=False)),
                ('snapshots', models.BooleanField(default=False)),
                ('backup_schedule', models.CharField(max_length=255)),
                ('offsite_backup', models.BooleanField(default=False)),
                ('airgap_backup', models.BooleanField(default=False)),
                ('primary_site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ft_primary_sites', to='dcim.site')),
                ('secondary_site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ft_secondary_sites', to='dcim.site')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tertiary_site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ft_tertiary_sites', to='dcim.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceDeployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('production_readiness_checklist', models.CharField(blank=True, max_length=255, null=True)),
                ('maintenance_window', models.CharField(max_length=255)),
                ('deployment_rfc', models.CharField(max_length=255)),
                ('business_owner_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sd_business_owners', to='tenancy.contact')),
                ('business_owner_tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sd_business_owners', to='tenancy.tenant')),
                ('engineering_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sd_responsible_deployment', to='tenancy.contact')),
                ('functional_area_sponsor_tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sd_fa_owners', to='tenancy.tenant')),
                ('functional_sub_area_sponsor_tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sd_sfa_owners', to='tenancy.tenant')),
                ('major_incident_coordinator_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sd_mi_owners', to='tenancy.contact')),
                ('monitoring_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sd_responsible_monitoring', to='tenancy.contact')),
                ('operations_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sd_responsible_operations', to='tenancy.contact')),
                ('service_owner_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sd_service_owners', to='tenancy.contact')),
                ('service_owner_tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sd_service_owners', to='tenancy.tenant')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('vip_required', models.BooleanField(blank=True, null=True)),
                ('instances_per_site', models.IntegerField(blank=True, null=True)),
                ('offsite_replication', models.BooleanField(blank=True, null=True)),
                ('clustered', models.BooleanField(blank=True, null=True)),
                ('multi_site', models.BooleanField(blank=True, null=True)),
                ('multi_region', models.BooleanField(blank=True, null=True)),
                ('snapshots', models.BooleanField(blank=True, null=True)),
                ('backup_schedule', models.CharField(blank=True, max_length=255, null=True)),
                ('offsite_backup', models.BooleanField(blank=True, null=True)),
                ('airgap_backup', models.BooleanField(blank=True, null=True)),
                ('requirement1_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement1_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement2_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement2_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement3_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement3_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement4_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement4_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement5_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement5_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement6_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement6_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement7_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement7_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement8_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement8_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement9_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement9_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement10_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement10_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement11_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement11_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement12_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement12_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement13_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement13_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement14_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement14_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement15_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement15_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement16_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement16_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement17_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement17_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement18_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement18_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement19_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement19_value', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement20_field', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement20_value', models.CharField(blank=True, max_length=255, null=True)),
                ('object_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('primary_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sr_primary_site_overrides', to='dcim.site')),
                ('requirement_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sr_designers', to='tenancy.contact')),
                ('secondary_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sr_secondary_site_overrides', to='dcim.site')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tertiary_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sr_tertiary_site_overrrides', to='dcim.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
                ('object_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('service_deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sc_components', to='netbox_servicemgmt.servicedeployment')),
                ('service_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sc_components', to='netbox_servicemgmt.servicerequirement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('service_type', models.CharField(max_length=255)),
                ('vendor_management_assessment', models.CharField(max_length=255)),
                ('design_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_designers', to='tenancy.contact')),
                ('fault_tolerence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='st_ft', to='netbox_servicemgmt.faulttolerance')),
                ('tags', taggit.managers.TaggableManager(through='taggit.TaggedItem', to='taggit.Tag')),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='st_vendor', to='dcim.manufacturer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='servicerequirement',
            name='service_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requirements', to='netbox_servicemgmt.servicetemplate'),
        ),
        migrations.AddField(
            model_name='servicedeployment',
            name='service_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_deployments', to='netbox_servicemgmt.servicetemplate'),
        ),
        migrations.CreateModel(
            name='SLO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('rpo', models.IntegerField()),
                ('rto', models.IntegerField()),
                ('sev1_response', models.IntegerField()),
                ('sev2_response', models.IntegerField()),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='servicetemplate',
            name='service_slo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='st_slo', to='netbox_servicemgmt.slo'),
        ),
        migrations.AddField(
            model_name='servicerequirement',
            name='service_slo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sr_slo', to='netbox_servicemgmt.slo'),
        ),
        migrations.CreateModel(
            name='SolutionDeployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('deployment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('deployment_date', models.DateTimeField()),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='servicedeployment',
            name='solution_deployment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_deployments', to='netbox_servicemgmt.solutiondeployment'),
        ),
        migrations.CreateModel(
            name='SolutionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('design_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_designers', to='tenancy.contact')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='solutiondeployment',
            name='solution_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solution_deployments', to='netbox_servicemgmt.solutiontemplate'),
        ),
        migrations.AddField(
            model_name='servicetemplate',
            name='solution_template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='st_solutions', to='netbox_servicemgmt.solutiontemplate'),
        ),
    ]