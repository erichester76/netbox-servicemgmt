# Generated by Django 5.1.4 on 2025-02-19 21:44

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('extras', '0122_charfield_null_choices'),
        ('netbox_servicemgmt', '0011_rename_faulttolerance_faulttolerence_and_more'),
        ('tenancy', '0017_natural_ordering'),
    ]

    operations = [
        migrations.CreateModel(
            name='SolutionBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('solution_number', models.CharField(max_length=50, null=True)),
                ('project_id', models.CharField(max_length=50, null=True)),
                ('description', models.TextField()),
                ('solution_type', models.CharField(max_length=55, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('data_classification', models.CharField(null=True)),
                ('compliance_requirements', models.CharField(blank=True, null=True)),
                ('last_bcdr_test', models.DateField(blank=True, null=True)),
                ('last_risk_assessment', models.DateField(blank=True, null=True)),
                ('last_review', models.DateField(blank=True, null=True)),
                ('production_readiness_status', models.CharField(blank=True, max_length=255, null=True)),
                ('vendor_management_status', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(default='inactive', max_length=20)),
                ('app_technical_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_app_technical_contact', to='tenancy.contact')),
                ('app_technical_contact_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_app_technical_contact', to='tenancy.tenant')),
                ('architect', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_design_contact', to='tenancy.contact')),
                ('business_owner_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_business_owner', to='tenancy.contact')),
                ('business_owner_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_business_owner', to='tenancy.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='engineering_contact',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='major_incident_coordinator_contact',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='monitoring_contact',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='operations_contact',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='previous_version',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='service_template',
        ),
        migrations.RemoveField(
            model_name='servicedeployment',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='fault_tolerence',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='previous_version',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='requirement_owner',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='service_slo',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='service_template',
        ),
        migrations.RemoveField(
            model_name='servicerequirement',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='servicetemplate',
            name='design_contact',
        ),
        migrations.RemoveField(
            model_name='servicetemplate',
            name='fault_tolerence',
        ),
        migrations.RemoveField(
            model_name='servicetemplate',
            name='previous_version',
        ),
        migrations.RemoveField(
            model_name='servicetemplate',
            name='service_slo',
        ),
        migrations.RemoveField(
            model_name='servicetemplate',
            name='solution_templates',
        ),
        migrations.RemoveField(
            model_name='servicetemplate',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='servicetemplate',
            name='vendor',
        ),
        migrations.RemoveField(
            model_name='sla',
            name='business_owner_contact',
        ),
        migrations.RemoveField(
            model_name='sla',
            name='business_owner_tenant',
        ),
        migrations.RemoveField(
            model_name='sla',
            name='slo',
        ),
        migrations.RemoveField(
            model_name='sla',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='sla',
            name='technical_contact',
        ),
        migrations.RemoveField(
            model_name='sla',
            name='virtual_machines',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='business_owner_contact',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='business_owner_tenant',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='design_contact',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='functional_area_sponsor_tenant',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='functional_sub_area_sponsor_tenant',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='previous_version',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='service_owner_contact',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='service_owner_tenant',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='slo',
        ),
        migrations.RemoveField(
            model_name='solutionrequest',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='solution_request',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='design_contact',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='fault_tolerence',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='previous_version',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='slo',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='solutiontemplate',
            name='vendors',
        ),
        migrations.RenameField(
            model_name='faulttolerence',
            old_name='clustered',
            new_name='backups',
        ),
        migrations.RenameField(
            model_name='faulttolerence',
            old_name='offsite_replication',
            new_name='gtm_required',
        ),
        migrations.RenameField(
            model_name='faulttolerence',
            old_name='vip_required',
            new_name='ltm_required',
        ),
        migrations.RemoveField(
            model_name='faulttolerence',
            name='instances_per_site',
        ),
        migrations.AddField(
            model_name='faulttolerence',
            name='multi_cloud',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='faulttolerence',
            name='storage_replication',
            field=models.BooleanField(null=True),
        ),
        migrations.AddField(
            model_name='faulttolerence',
            name='vm_replication',
            field=models.BooleanField(null=True),
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('solutionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='netbox_servicemgmt.solutionbase')),
                ('object_id', models.PositiveIntegerField()),
                ('object_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='netbox_servicemgmt.component')),
            ],
            options={
                'verbose_name': 'Component',
                'verbose_name_plural': 'Components',
                'ordering': ['name'],
            },
            bases=('netbox_servicemgmt.solutionbase',),
        ),
        migrations.CreateModel(
            name='Deployment',
            fields=[
                ('solutionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='netbox_servicemgmt.solutionbase')),
                ('deployment_type', models.CharField(max_length=255)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='netbox_servicemgmt.deployment')),
            ],
            options={
                'verbose_name': 'Deployment',
                'verbose_name_plural': 'Deployments',
                'ordering': ['name'],
            },
            bases=('netbox_servicemgmt.solutionbase',),
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('solutionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='netbox_servicemgmt.solutionbase')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='netbox_servicemgmt.solution')),
            ],
            options={
                'verbose_name': 'Solution',
                'verbose_name_plural': 'Solutions',
                'ordering': ['name'],
            },
            bases=('netbox_servicemgmt.solutionbase',),
        ),
        migrations.AddField(
            model_name='solutionbase',
            name='fault_tolerence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solutions', to='netbox_servicemgmt.faulttolerence'),
        ),
        migrations.AddField(
            model_name='solutionbase',
            name='incident_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incident_contact', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solutionbase',
            name='os_technical_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_os_technical_contact', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solutionbase',
            name='os_technical_contact_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_os_technical_contact', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='solutionbase',
            name='requester',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_requester', to='tenancy.contact'),
        ),
        migrations.AddField(
            model_name='solutionbase',
            name='slos',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solutions', to='netbox_servicemgmt.slo'),
        ),
        migrations.AddField(
            model_name='solutionbase',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.DeleteModel(
            name='ServiceComponent',
        ),
        migrations.DeleteModel(
            name='ServiceDeployment',
        ),
        migrations.DeleteModel(
            name='ServiceRequirement',
        ),
        migrations.DeleteModel(
            name='ServiceTemplate',
        ),
        migrations.DeleteModel(
            name='SLA',
        ),
        migrations.DeleteModel(
            name='SolutionRequest',
        ),
        migrations.DeleteModel(
            name='SolutionTemplate',
        ),
        migrations.AddField(
            model_name='component',
            name='component_deployment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='components', to='netbox_servicemgmt.deployment'),
        ),
        migrations.AddField(
            model_name='deployment',
            name='deployment_solution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deployments', to='netbox_servicemgmt.solution'),
        ),
    ]