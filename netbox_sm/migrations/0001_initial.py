# Generated by Django 5.1.4 on 2025-02-20 01:20

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('dcim', '0200_populate_mac_addresses'),
        ('extras', '0122_charfield_null_choices'),
        ('tenancy', '0017_natural_ordering'),
    ]

    operations = [
        migrations.CreateModel(
            name='Deployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('version', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(default='inactive', max_length=20)),
                ('deployment_type', models.CharField(max_length=255)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='netbox_sm.deployment')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Deployment',
                'verbose_name_plural': 'Deployments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('version', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(default='inactive', max_length=20)),
                ('object_id', models.PositiveIntegerField()),
                ('object_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='netbox_sm.component')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('component_deployment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='components', to='netbox_sm.deployment')),
            ],
            options={
                'verbose_name': 'Component',
                'verbose_name_plural': 'Components',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FaultTolerence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
                ('multi_site', models.BooleanField(null=True)),
                ('multi_region', models.BooleanField(null=True)),
                ('multi_cloud', models.BooleanField(null=True)),
                ('gtm_required', models.BooleanField(null=True)),
                ('ltm_required', models.BooleanField(null=True)),
                ('snapshots', models.BooleanField(null=True)),
                ('storage_replication', models.BooleanField(null=True)),
                ('vm_replication', models.BooleanField(null=True)),
                ('backups', models.BooleanField(null=True)),
                ('backup_schedule', models.CharField(max_length=255, null=True)),
                ('offsite_backup', models.BooleanField(null=True)),
                ('airgap_backup', models.BooleanField(null=True)),
                ('primary_site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ft_primary_sites', to='dcim.site')),
                ('secondary_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ft_secondary_sites', to='dcim.site')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tertiary_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ft_tertiary_sites', to='dcim.site')),
            ],
            options={
                'verbose_name': 'Fault Tolerence Model',
                'verbose_name_plural': 'Fault Tolerence Models',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SLO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('rpo', models.IntegerField()),
                ('rto', models.IntegerField()),
                ('sev1_response', models.IntegerField(blank=True, null=True)),
                ('sev2_response', models.IntegerField(blank=True, null=True)),
                ('sev3_response', models.IntegerField(blank=True, null=True)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Service Level Object',
                'verbose_name_plural': 'Service Level Objects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=255)),
                ('solution_number', models.CharField(max_length=50, null=True)),
                ('project_id', models.CharField(max_length=50, null=True)),
                ('description', models.TextField()),
                ('solution_type', models.CharField(max_length=55, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('data_classification', models.CharField(null=True)),
                ('compliance_requirements', models.CharField(blank=True, null=True)),
                ('last_bcdr_test', models.DateField(blank=True, null=True)),
                ('last_risk_assessment', models.DateField(blank=True, null=True)),
                ('last_review', models.DateField(blank=True, null=True)),
                ('production_readiness_status', models.CharField(blank=True, max_length=255, null=True)),
                ('vendor_management_status', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(default='inactive', max_length=20)),
                ('app_technical_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_app_technical_contact', to='tenancy.contact')),
                ('app_technical_contact_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_app_technical_contact', to='tenancy.tenant')),
                ('architect', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_design_contact', to='tenancy.contact')),
                ('business_owner_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_business_owner', to='tenancy.contact')),
                ('business_owner_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_business_owner', to='tenancy.tenant')),
                ('fault_tolerence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solutions', to='netbox_sm.faulttolerence')),
                ('incident_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incident_contact', to='tenancy.contact')),
                ('os_technical_contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_os_technical_contact', to='tenancy.contact')),
                ('os_technical_contact_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_os_technical_contact', to='tenancy.tenant')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='netbox_sm.solution')),
                ('requester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solution_requester', to='tenancy.contact')),
                ('slos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='solutions', to='netbox_sm.slo')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Solution',
                'verbose_name_plural': 'Solutions',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='deployment',
            name='deployment_solution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deployments', to='netbox_sm.solution'),
        ),
    ]